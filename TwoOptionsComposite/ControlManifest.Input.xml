<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="Dianamics" constructor="TwoOptionsComposite" version="1.0.2" display-name-key="TwoOptionsComposite" description-key="TwoOptionsComposite description" control-type="standard">
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be true by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>    
    <property name="boolean1" display-name-key="Boolean1" description-key="Two Options 1" of-type="TwoOptions" usage="bound" required="true" />
    <property name="boolean1Icons" display-name-key="Boolean1Icons" description-key="Icons for Two Options 1" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="cardWidth" display-name-key="CardWidth" description-key="The width of a card" of-type="Whole.None" usage="input" required="false" default-value="120"/>
    <property name="cardHeight" display-name-key="CardHeight" description-key="The height of a card" of-type="Whole.None" usage="input" required="false" default-value="100"/>
    <property name="showOn" display-name-key="ShowOn" description-key="Show the cards only on value" of-type="Enum" usage="input" required="true">
      <value name="ALWAYS" display-name-key="Always" description-key="Always" default="true">ALWAYS</value>
      <value name="TRUE" display-name-key="True" description-key="True">TRUE</value>
      <value name="FALSE" display-name-key="False" description-key="False">FALSE</value>
      <value name="NOTNULL" display-name-key="Not null" description-key="Not null">NOTNULL</value>
    </property>
    <property name="disabledAttributes" display-name-key="Disabled attribute names" description-key="All the disabled attributes, separated by semicolon" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="hiddenAttributes" display-name-key="Hidden attribute names" description-key="All the attributes which should be hidden, separated by semicolon" of-type="SingleLine.Text" usage="input" required="false"/>
    <property name="boolean2" display-name-key="Boolean2" description-key="Two Options 2" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean2Icons" display-name-key="Boolean2Icons" description-key="Icons for Two Options 2" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean3" display-name-key="Boolean3" description-key="Two Options 3" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean3Icons" display-name-key="Boolean3Icons" description-key="Icons for Two Options 3" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean4" display-name-key="Boolean4" description-key="Two Options 4" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean4Icons" display-name-key="Boolean4Icons" description-key="Icons for Two Options 4" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean5" display-name-key="Boolean5" description-key="Two Options 5" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean5Icons" display-name-key="Boolean5Icons" description-key="Icons for Two Options 5" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean6" display-name-key="Boolean6" description-key="Two Options 6" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean6Icons" display-name-key="Boolean6Icons" description-key="Icons for Two Options 6" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean7" display-name-key="Boolean7" description-key="Two Options 7" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean7Icons" display-name-key="Boolean7Icons" description-key="Icons for Two Options 7" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean8" display-name-key="Boolean8" description-key="Two Options 8" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean8Icons" display-name-key="Boolean8Icons" description-key="Icons for Two Options 8" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean9" display-name-key="Boolean9" description-key="Two Options 9" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean9Icons" display-name-key="Boolean9Icons" description-key="Icons for Two Options 9" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean10" display-name-key="Boolean10" description-key="Two Options 10" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean10Icons" display-name-key="Boolean10Icons" description-key="Icons for Two Options 10" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean11" display-name-key="Boolean11" description-key="Two Options 11" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean11Icons" display-name-key="Boolean11Icons" description-key="Icons for Two Options 11" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean12" display-name-key="Boolean12" description-key="Two Options 12" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean12Icons" display-name-key="Boolean12Icons" description-key="Icons for Two Options 12" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean13" display-name-key="Boolean13" description-key="Two Options 13" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean13Icons" display-name-key="Boolean13Icons" description-key="Icons for Two Options 13" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean14" display-name-key="Boolean14" description-key="Two Options 14" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean14Icons" display-name-key="Boolean14Icons" description-key="Icons for Two Options 14" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean15" display-name-key="Boolean15" description-key="Two Options 15" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean15Icons" display-name-key="Boolean15Icons" description-key="Icons for Two Options 15" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean16" display-name-key="Boolean16" description-key="Two Options 16" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean16Icons" display-name-key="Boolean16Icons" description-key="Icons for Two Options 16" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean17" display-name-key="Boolean17" description-key="Two Options 17" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean17Icons" display-name-key="Boolean17Icons" description-key="Icons for Two Options 17" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean18" display-name-key="Boolean18" description-key="Two Options 18" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean18Icons" display-name-key="Boolean18Icons" description-key="Icons for Two Options 18" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean19" display-name-key="Boolean19" description-key="Two Options 19" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean19Icons" display-name-key="Boolean19Icons" description-key="Icons for Two Options 19" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean20" display-name-key="Boolean20" description-key="Two Options 20" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean20Icons" display-name-key="Boolean20Icons" description-key="Icons for Two Options 20" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean21" display-name-key="Boolean21" description-key="Two Options 21" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean21Icons" display-name-key="Boolean21Icons" description-key="Icons for Two Options 21" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean22" display-name-key="Boolean22" description-key="Two Options 22" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean22Icons" display-name-key="Boolean22Icons" description-key="Icons for Two Options 22" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean23" display-name-key="Boolean23" description-key="Two Options 23" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean23Icons" display-name-key="Boolean23Icons" description-key="Icons for Two Options 23" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean24" display-name-key="Boolean24" description-key="Two Options 24" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean24Icons" display-name-key="Boolean24Icons" description-key="Icons for Two Options 24" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean25" display-name-key="Boolean25" description-key="Two Options 25" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean25Icons" display-name-key="Boolean25Icons" description-key="Icons for Two Options 25" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean26" display-name-key="Boolean26" description-key="Two Options 26" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean26Icons" display-name-key="Boolean26Icons" description-key="Icons for Two Options 26" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean27" display-name-key="Boolean27" description-key="Two Options 27" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean27Icons" display-name-key="Boolean27Icons" description-key="Icons for Two Options 27" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean28" display-name-key="Boolean28" description-key="Two Options 28" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean28Icons" display-name-key="Boolean28Icons" description-key="Icons for Two Options 28" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean29" display-name-key="Boolean29" description-key="Two Options 29" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean29Icons" display-name-key="Boolean29Icons" description-key="Icons for Two Options 29" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <property name="boolean30" display-name-key="Boolean30" description-key="Two Options 30" of-type="TwoOptions" usage="bound" required="false" />
    <property name="boolean30Icons" display-name-key="Boolean30Icons" description-key="Icons for Two Options 30" of-type="SingleLine.Text" usage="input" required="false" default-value="ToggleLeft;ToggleRight"/>
    <!-- 
      Property node's of-type attribute can be of-type-group attribute. 
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="false" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
       <css path="css/TwoOptionsComposite.css" order="1" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/TwoOptionsComposite.css" order="1" />
      <resx path="strings/TwoOptionsComposite.1033.resx" version="1.0.0" />
      -->
    </resources>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="false" />
      <uses-feature name="Device.captureImage" required="false" />
      <uses-feature name="Device.captureVideo" required="false" />
      <uses-feature name="Device.getBarcodeValue" required="false" />
      <uses-feature name="Device.getCurrentPosition" required="false" />
      <uses-feature name="Device.pickFile" required="false" />
      <uses-feature name="Utility" required="false" />
      <uses-feature name="WebAPI" required="false" />
    </feature-usage>
    -->
  </control>
</manifest>